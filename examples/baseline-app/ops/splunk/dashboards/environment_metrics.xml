<dashboard theme="dark">
  <label>environment metrics</label>
  <row>
    <panel>
      <chart>
        <title>Provide CPU Usage (%)</title>
        <search>
          <query>| mstats avg(_value) as avgTotal WHERE metric_name="cadvisor./docker.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avgCPU1 WHERE (metric_name="cadvisor.postgres.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU2 WHERE metric_name="cadvisor.redis.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU3 WHERE metric_name="cadvisor.provide-nats.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU4 WHERE (metric_name="cadvisor.nats-streaming.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU5 WHERE (metric_name="cadvisor.goldmine.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU6 WHERE (metric_name="cadvisor.goldmine-consumer.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU7 WHERE (metric_name="cadvisor.reachabilitydaemon.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU8 WHERE (metric_name="cadvisor.statsdaemon.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU9 WHERE (metric_name="cadvisor.ident.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU10 WHERE (metric_name="cadvisor.ident-consumer.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU11 WHERE (metric_name="cadvisor.vault.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| streamstats stdev(avgCPU1) as difCPU1 stdev(avgCPU2) as difCPU2 stdev(avgCPU3) as difCPU3 stdev(avgCPU4) as difCPU4 stdev(avgCPU5) as difCPU5 stdev(avgCPU6) as difCPU6 stdev(avgCPU7) as difCPU7 stdev(avgCPU8) as difCPU8 stdev(avgCPU9) as difCPU9 stdev(avgCPU10) as difCPU10 stdev(avgCPU11) as difCPU11 stdev(avgTotal) as difTotal window=2 by metric_name
| eval percentCPU1=difCPU1/difTotal*100
| eval percentCPU2=difCPU2/difTotal*100
| eval percentCPU3=difCPU3/difTotal*100
| eval percentCPU4=difCPU4/difTotal*100
| eval percentCPU5=difCPU5/difTotal*100
| eval percentCPU6=difCPU6/difTotal*100
| eval percentCPU7=difCPU7/difTotal*100
| eval percentCPU8=difCPU8/difTotal*100
| eval percentCPU9=difCPU9/difTotal*100
| eval percentCPU10=difCPU10/difTotal*100
| eval percentCPU11=difCPU11/difTotal*100
| eval groupTotal=percentCPU1+percentCPU2+percentCPU3+percentCPU4+percentCPU5+percentCPU6+percentCPU7+percentCPU8+percentCPU9+percentCPU10+percentCPU11
| timechart partial=f latest(percentCPU1) as postgres latest(percentCPU2) as redis latest(percentCPU3) as provide-nats latest(percentCPU4) as nats-streaming latest(percentCPU5) as goldmine latest(percentCPU6) as goldmine-consumer latest(percentCPU7) as reachabilitydaemon latest(percentCPU8) as statsdaemon latest(percentCPU9) as ident latest(percentCPU10) as ident-consumer latest(percentCPU11) as vault latest(groupTotal) as total span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Baseline CPU Usage (%)</title>
        <search>
          <query>| mstats avg(_value) as avgTotal WHERE metric_name="cadvisor./docker.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avgCPU1 WHERE (metric_name="cadvisor.nethermind.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU2 WHERE metric_name="cadvisor.mongodb.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU3 WHERE metric_name="cadvisor.merkle-tree.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU4 WHERE (metric_name="cadvisor.zkp.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU5 WHERE (metric_name="cadvisor.baseline.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU6 WHERE (metric_name="cadvisor.unibright.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| streamstats stdev(avgCPU1) as difCPU1 stdev(avgCPU2) as difCPU2 stdev(avgCPU3) as difCPU3 stdev(avgCPU4) as difCPU4 stdev(avgCPU5) as difCPU5 stdev(avgCPU6) as difCPU6 stdev(avgTotal) as difTotal window=2 by metric_name
| eval percentCPU1=difCPU1/difTotal*100
| eval percentCPU2=difCPU2/difTotal*100
| eval percentCPU3=difCPU3/difTotal*100
| eval percentCPU4=difCPU4/difTotal*100
| eval percentCPU5=difCPU5/difTotal*100
| eval percentCPU6=difCPU6/difTotal*100
| eval groupTotal=percentCPU1+percentCPU2+percentCPU3+percentCPU4+percentCPU5+percentCPU6
| timechart partial=f latest(percentCPU1) as nethermind latest(percentCPU2) as mongodb latest(percentCPU3) as merkle-tree latest(percentCPU4) as zkp latest(percentCPU5) as baseline latest(percentCPU6) as unibright latest(groupTotal) as total span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Splunk &amp; Metrics CPU Usage (%)</title>
        <search>
          <query>| mstats avg(_value) as avgTotal WHERE metric_name="cadvisor./docker.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avgCPU1 WHERE (metric_name="cadvisor.splunk.cpu_cumulative_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU2 WHERE metric_name="cadvisor.*ethlogger*.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avgCPU3 WHERE metric_name="cadvisor.*cadvisor*.cpu_cumulative_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| streamstats stdev(avgCPU1) as difCPU1 stdev(avgCPU2) as difCPU2 stdev(avgCPU3) as difCPU3 stdev(avgTotal) as difTotal window=2 by metric_name
| eval percentCPU1=difCPU1/difTotal*100
| eval percentCPU2=difCPU2/difTotal*100
| eval percentCPU3=difCPU3/difTotal*100
| eval groupTotal=percentCPU1+percentCPU2+percentCPU3
| timechart partial=f latest(percentCPU1) as splunk latest(percentCPU2) as ethlogger latest(percentCPU3) as cadvisor latest(groupTotal) as total span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Provide Memory Usage (MB)</title>
        <search>
          <query>| mstats avg(_value) as avgTotal WHERE metric_name="cadvisor./docker.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avg1 WHERE (metric_name="cadvisor.postgres.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg2 WHERE metric_name="cadvisor.redis.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg3 WHERE metric_name="cadvisor.provide-nats.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg4 WHERE (metric_name="cadvisor.nats-streaming.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg5 WHERE (metric_name="cadvisor.goldmine.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg6 WHERE (metric_name="cadvisor.goldmine-consumer.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg7 WHERE (metric_name="cadvisor.reachabilitydaemon.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg8 WHERE (metric_name="cadvisor.statsdaemon.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg9 WHERE (metric_name="cadvisor.ident.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg10 WHERE (metric_name="cadvisor.ident-consumer.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg11 WHERE (metric_name="cadvisor.vault.memory_usage") AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| eval bytes1=round(avg1/1024/1024,2)
| eval bytes2=round(avg2/1024/1024,2)
| eval bytes3=round(avg3/1024/1024,2)
| eval bytes4=round(avg4/1024/1024,2)
| eval bytes5=round(avg5/1024/1024,2)
| eval bytes6=round(avg6/1024/1024,2)
| eval bytes7=round(avg7/1024/1024,2)
| eval bytes8=round(avg8/1024/1024,2)
| eval bytes9=round(avg9/1024/1024,2)
| eval bytes10=round(avg10/1024/1024,2)
| eval bytes11=round(avg11/1024/1024,2)
| timechart partial=f latest(bytes1) as postgres latest(bytes2) as redis latest(bytes3) as provide-nats latest(bytes4) as nats-streaming latest(bytes5) as goldmine latest(bytes6) as goldmine-consumer latest(bytes7) as reachabilitydaemon latest(bytes8) as statsdaemon latest(bytes9) as ident latest(bytes10) as ident-consumer latest(bytes11) as vault span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Baseline Memory Usage (MB)</title>
        <search>
          <query>| mstats avg(_value) as avgTotal WHERE metric_name="cadvisor./docker.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avg1 WHERE metric_name="cadvisor.nethermind.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg2 WHERE metric_name="cadvisor.mongodb.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg3 WHERE metric_name="cadvisor.merkle-tree.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg4 WHERE metric_name="cadvisor.zkp.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg5 WHERE metric_name="cadvisor.baseline.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg6 WHERE metric_name="cadvisor.unibright.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| eval bytes1=round(avg1/1024/1024,2)
| eval bytes2=round(avg2/1024/1024,2)
| eval bytes3=round(avg3/1024/1024,2)
| eval bytes4=round(avg4/1024/1024,2)
| eval bytes5=round(avg5/1024/1024,2)
| eval bytes6=round(avg6/1024/1024,2)
| timechart partial=f latest(bytes1) as nethermind latest(bytes2) as mongodb latest(bytes3) as merkle-tree latest(bytes4) as zkp latest(bytes5) as baseline latest(bytes6) as unibright span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Splunk &amp; Metrics Memory Usage (MB)</title>
        <search>
          <query>| mstats avg(_value) as avgTotal WHERE metric_name="cadvisor./docker.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avg1 WHERE metric_name="cadvisor.splunk.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg2 WHERE metric_name="cadvisor.*ethlogger*.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg3 WHERE metric_name="cadvisor.*cadvisor*.memory_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| eval bytes1=round(avg1/1024/1024,2)
| eval bytes2=round(avg2/1024/1024,2)
| eval bytes3=round(avg3/1024/1024,2)
| timechart partial=f latest(bytes1) as splunk latest(bytes2) as ethlogger latest(bytes3) as cadvisor span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Provide Disk Usage (MB)</title>
        <search>
          <query>| mstats avg(_value) as avg1 WHERE (metric_name="cadvisor.postgres.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name
| appendcols 
    [ mstats avg(_value) as avg2 WHERE metric_name="cadvisor.redis.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg3 WHERE metric_name="cadvisor.provide-nats.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg4 WHERE (metric_name="cadvisor.nats-streaming.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg5 WHERE (metric_name="cadvisor.goldmine.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg6 WHERE (metric_name="cadvisor.goldmine-consumer.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg7 WHERE (metric_name="cadvisor.reachabilitydaemon.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg8 WHERE (metric_name="cadvisor.statsdaemon.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg9 WHERE (metric_name="cadvisor.ident.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg10 WHERE (metric_name="cadvisor.ident-consumer.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| appendcols 
    [ mstats avg(_value) as avg11 WHERE (metric_name="cadvisor.vault.fs_summary.fs_usage") AND index="cadvisor_metrics" span=10s by metric_name] 
| sort - metric_name _time 
| eval bytes1=round(avg1/1024/1024,2) 
| eval bytes2=round(avg2/1024/1024,2) 
| eval bytes3=round(avg3/1024/1024,2) 
| eval bytes4=round(avg4/1024/1024,2) 
| eval bytes5=round(avg5/1024/1024,2) 
| eval bytes6=round(avg6/1024/1024,2) 
| eval bytes7=round(avg7/1024/1024,2) 
| eval bytes8=round(avg8/1024/1024,2) 
| eval bytes9=round(avg9/1024/1024,2) 
| eval bytes10=round(avg10/1024/1024,2) 
| eval bytes11=round(avg11/1024/1024,2) 
| timechart partial=f latest(bytes1) as postgres latest(bytes2) as redis latest(bytes3) as provide-nats latest(bytes4) as nats-streaming latest(bytes5) as goldmine latest(bytes6) as goldmine-consumer latest(bytes7) as reachabilitydaemon latest(bytes8) as statsdaemon latest(bytes9) as ident latest(bytes10) as ident-consumer latest(bytes11) as vault span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Baseline Disk Usage (MB)</title>
        <search>
          <query>| mstats avg(_value) as avg1 WHERE metric_name="cadvisor.nethermind.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avg2 WHERE metric_name="cadvisor.mongodb.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg3 WHERE metric_name="cadvisor.merkle-tree.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg4 WHERE metric_name="cadvisor.zkp.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg5 WHERE metric_name="cadvisor.baseline.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg6 WHERE metric_name="cadvisor.unibright.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| eval bytes1=round(avg1/1024/1024,2)
| eval bytes2=round(avg2/1024/1024,2)
| eval bytes3=round(avg3/1024/1024,2)
| eval bytes4=round(avg4/1024/1024,2)
| eval bytes5=round(avg5/1024/1024,2)
| eval bytes6=round(avg6/1024/1024,2)
| timechart partial=f latest(bytes1) as nethermind latest(bytes2) as mongodb latest(bytes3) as merkle-tree latest(bytes4) as zkp latest(bytes5) as baseline latest(bytes6) as unibright span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Splunk &amp; Metrics Disk Usage (MB)</title>
        <search>
          <query>| mstats avg(_value) as avg1 WHERE metric_name="cadvisor.splunk.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name
| appendcols
    [ mstats avg(_value) as avg2 WHERE metric_name="cadvisor.*ethlogger*.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| appendcols
    [ mstats avg(_value) as avg3 WHERE metric_name="cadvisor.*cadvisor*.fs_summary.fs_usage" AND index="cadvisor_metrics" span=10s by metric_name]
| sort - metric_name _time
| eval bytes1=round(avg1/1024/1024,2)
| eval bytes2=round(avg2/1024/1024,2)
| eval bytes3=round(avg3/1024/1024,2)
| timechart partial=f latest(bytes1) as splunk latest(bytes2) as ethlogger latest(bytes3) as cadvisor span=10s</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>1m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
</dashboard>