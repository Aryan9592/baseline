{
    "id": "uuid",
    "originatorBpiSubject": "did_jwt_ACME", 
    "createDate": "date",
    "updateDate": "date",
    "description": "",  //“The Bank Data Object of H(DID-JWT_Customer) from H(DID-JWT_ACME) and committed to as MerkleRoot(Bank Data Object) has the following structure: ${schema} and commits to a set of values to be synchronized for the data properties in the structure”,
    "syncPredicate":
    {
    "predicate": [], //[ISyncPredicate] - Array of merkle proofs for each banking data element, and predicate defining the Merkle tree structure in terms of fields to be proven
    "input": [], //[ISyncPredicateInputData] - Array of inputs required for the predicate zk proofs
    "output": {}, //ISyncPredicateOutputData - Output to be obtained after running the predicate using the above inputs and syncing the state objects 
    },
    "advancePredicate":
    {
    "predicate": [], // [IAdvancePredicate] - Array of functions for each business rule
    "input": [], //[IAdvancePredicateInputData] - Array of inputs for each business rule"
    "output": {} //"IAdvancePredicateOutputData - Output to be obtained after running the predicate using the above inputs and advancing the state objects", 
    },
    "bankStateObject": {}, //"bankStateObject as mentioned in [R140]",
    "environment": 
    [ 
    {
        "briId": "string - Id for BRI-3",
        "workgroupId": "string - Id for Workgroup 1 in BRI-3",
        "workflowId": "string - Id for Workflow in BRI-3",
        "workstepId": "string - Id for Workstep 1 in BRI-3"
    },
    {
        "briId": "string - Id for BRI-1",
        "workgroupId": "string - Id for Workgroup 2 in BRI-1",
        "workflowId": "string - Id for Workflow in BRI-1",
        "workstepId": "string - Id for Workstep 2 in BRI-1"
    },
    {
        "briId": "string - Id for BRI-3",
        "workgroupId": "string - Id for Workgroup 1 in BRI-3",
        "workflowId": "string - Id for Workflow in BRI-3",
        "workstepId": "string - Id for Workstep 3 in BRI-3"
    }
    ]
    "proverSystem" : “Groth16 | Plonk”,
    "crs": "crs value for groth16 | plonk",
    "orignatorSignature": "Digital signature of ACME over the payload [message,pubKey,signature]"
    }
    